#!/usr/bin/python
import math

def sWait(seconds):
	print "sleeping for: ", seconds, " seconds"
	[statuss, framesizes] = s.get(state, wait=False, last=False)
	stic = state.time
	while(1):	
		time.sleep(.1)
		[statuss, framesizes] = s.get(state, wait=True, last=False)
		if ((state.time - stic) > seconds):
			break	
	
import hubo_ach as ha
import ach
import sys
import time, timeit
from ctypes import *

# Open Hubo-Ach feed-forward and feed-back (reference and state) channels
s = ach.Channel(ha.HUBO_CHAN_STATE_NAME)
r = ach.Channel(ha.HUBO_CHAN_REF_NAME)
#s.flush()
#r.flush()

# feed-forward will now be refered to as "state"
state = ha.HUBO_STATE()

# feed-back will now be refered to as "ref"
ref = ha.HUBO_REF()

# Get the current feed-forward (state) 
[statuss, framesizes] = s.get(state, wait=False, last=False)


print "Bending both knees ..."
pos = [.1, .2, .3, .4]
for p in pos:
	ref.ref[ha.LSR] = p
	ref.ref[ha.RSR] = -p
	
	ref.ref[ha.RHP] = -p
	ref.ref[ha.RKN] = 2*p
	ref.ref[ha.RAP] = -p

	ref.ref[ha.LHP] = -p
	ref.ref[ha.LKN] = 2*p
	ref.ref[ha.LAP] = -p

	# Write to the feed-forward channel
	r.put(ref)

	sWait(.05)
	
sWait(.5)


for i in range(20):
	print "Tilting right ..."
	pos = [0, .01, .02, .04, .06, .08, .1, .12, .14]
	for p in pos:
		ref.ref[ha.RHR] = p
		ref.ref[ha.RAR] = -p

		ref.ref[ha.LHR] = p
		ref.ref[ha.LAR] = -p
		
		r.put(ref)
		sWait(.1)
	
	sWait(.2)
	
	print "Lift left foot ..."
	pos = [.55]
	for p in pos:
		ref.ref[ha.LHP] = -p
		ref.ref[ha.LKN] = 2*p
		ref.ref[ha.LAP] = -p
		r.put(ref)
		sWait(.1)
	
	sWait(.2)
	
	print "Extend left foot ..."
	pos = [.4]
	for p in pos:
		#ref.ref[ha.LHP] = -p
		ref.ref[ha.LKN] = 2*p
		ref.ref[ha.LAP] = -(p - .2)
		r.put(ref)
		sWait(.1)
	
	sWait(.2)
	
	
		
	print "Tilting upright ..."
	pos = [.14, .12, .1, .08, .06, .04, .02, .01, 0]
	for p in pos:
		ref.ref[ha.RHR] = p
		ref.ref[ha.RAR] = -p

		ref.ref[ha.LHR] = p
		ref.ref[ha.LAR] = -p

		# Write to the feed-forward channel
		r.put(ref)

		sWait(.1)
	
	print("Left foot to original bent ...")
	p = .4
	ref.ref[ha.LHP] = -p
	ref.ref[ha.LKN] = 2*p
	ref.ref[ha.LAP] = -p
	r.put(ref)
	
	print "Tilting left ..."
	pos = [0, .01, .02, .04, .06, .08, .1, .12, .14]
	for p in pos:
		ref.ref[ha.RHR] = -p
		ref.ref[ha.RAR] = p

		ref.ref[ha.LHR] = -p
		ref.ref[ha.LAR] = p

		# Write to the feed-forward channel
		r.put(ref)

		sWait(.1)
	
	sWait(.2)
	
	print("Right foot to original bent ...")
	p = .4	
	ref.ref[ha.RHP] = -p
	ref.ref[ha.RKN] = 2*p
	ref.ref[ha.RAP] = -p
	r.put(ref)
	sWait(.1)
	
	
	
	
	print "Lift right foot ..."
	pos = [.55]
	for p in pos:
		ref.ref[ha.RHP] = -p
		ref.ref[ha.RKN] = 2*p
		ref.ref[ha.RAP] = -p
		r.put(ref)
		sWait(.1)
	
	sWait(.2)
	
	print "Extend right foot ..."
	pos = [.4]
	for p in pos:
		#ref.ref[ha.RHP] = -p
		ref.ref[ha.RKN] = 2*p
		ref.ref[ha.RAP] = -(p - .2)
		r.put(ref)
		sWait(.1)
	
	sWait(.2)
		
	print "Tilting upright ..."
	pos = [.14, .12, .1, .08, .06, .04, .02, .01, 0]
	for p in pos:
		ref.ref[ha.RHR] = -p
		ref.ref[ha.RAR] = p

		ref.ref[ha.LHR] = -p
		ref.ref[ha.LAR] = p

		# Write to the feed-forward channel
		r.put(ref)

		sWait(.1)
		
	print("Right foot to original bent ...")
	p = .4
	ref.ref[ha.RHP] = -p
	ref.ref[ha.RKN] = 2*p
	ref.ref[ha.RAP] = -p
	r.put(ref)
		
print "Stand up ..."
pos = [.3, .2, .1, 0]
for p in pos:
	ref.ref[ha.LSR] = p
	ref.ref[ha.RSR] = -p
	
	ref.ref[ha.RHP] = -p
	ref.ref[ha.RKN] = 2*p
	ref.ref[ha.RAP] = -p

	ref.ref[ha.LHP] = -p
	ref.ref[ha.LKN] = 2*p
	ref.ref[ha.LAP] = -p

	# Write to the feed-forward channel
	r.put(ref)

	sWait(.05)


r.close()
s.close()

